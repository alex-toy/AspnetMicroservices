services:
  articlemongodb:
    container_name: articlemongodb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - mongo_data:/data/db:rw
  articles.api:
    build:
      context: C:\source\Csharp\AspnetMicroservices\src
      dockerfile: Services/Articles/Articles.API/Dockerfile
    container_name: articles.api
    depends_on:
      articlemongodb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MongoSettings:ConnectionString: mongodb://articlemongodb:27017
    image: articlesapi
    ports:
    - published: 8000
      target: 80
  inventory.api:
    build:
      context: C:\source\Csharp\AspnetMicroservices\src
      dockerfile: Services/Inventory/Inventory.API/Dockerfile
    container_name: inventory.api
    depends_on:
      inventorydb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RedisSettings:ConnectionString: inventorydb:6379
    image: inventoryapi
    ports:
    - published: 8001
      target: 80
  inventorydb:
    container_name: inventorydb
    image: redis:alpine
    ports:
    - published: 6379
      target: 6379
    restart: always
  portainer:
    image: portainer/portainer-ce
  usermongodb:
    container_name: usermongodb
    image: mongo
    ports:
    - published: 27018
      target: 27017
    restart: always
    volumes:
    - user_mongo_data:/data/db:rw
  users.api:
    build:
      context: C:\source\Csharp\AspnetMicroservices\src
      dockerfile: Services/Users/Users.API/Dockerfile
    container_name: users.api
    depends_on:
      usermongodb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MongoSettings:ConnectionString: mongodb://usermongodb:27017
    image: usersapi
    ports:
    - published: 8500
      target: 80
version: '3.4'
volumes:
  mongo_data: {}
  portainer_data: {}
  user_mongo_data: {}