version: '3.4'

services:

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data


  articlemongodb:
    container_name : articlemongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  articles.api:
    container_name : articles.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "MongoSettings:ConnectionString=mongodb://articlemongodb:27017"
    depends_on:
      - articlemongodb
    ports:
      - "8000:80"


  usermongodb:
    container_name : usermongodb
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - user_mongo_data:/data/db

  users.api:
    container_name : users.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "MongoSettings:ConnectionString=mongodb://usermongodb:27017"
    depends_on:
      - usermongodb
    ports:
      - "8500:80"


  inventorydb:
    container_name: inventorydb
    restart: always
    ports:
      - "6379:6379"

  inventory.api:
    container_name: inventory.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "RedisSettings:ConnectionString=inventorydb:6379"
    depends_on:
      - inventorydb
    ports:
      - "8001:80"
